/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}

fun NombreEdad(){
    val nombre: String = "Facu"
    val edad: Int = 16

    println("Hola: $nombre")
    println("Tenes: $edad")
}

fun mostrarTiposDeDatos() {
    val nombre: String = "Juan"
    val edad: Int = 25
    val altura: Double = 1.75
    val esEstudiante: Boolean = true
    
    println("Nombre: $nombre")
    println("Edad: $edad")
    println("Altura: $altura")
    println("Es estudiante: $esEstudiante")
}

fun triangulorec(){
    val base: Double = 5.8
    val altura: Double = 3.7

    val area = base*altura
    println("El area de triangulo es: $area m2")
}



fun esParOImpar(numero: Int = 5): String {
    return when {
        numero % 2 == 0 -> "Par"
        else -> "Impar"
    }
}

fun PositivoNegativo(){
    val numero2: Double = -5.0

    if (numero2 > 0){
        println("El numero es positivo")
    }

    if (numero2 < 0){
        println("El numero es negativo ")
    }
}

fun mostrarNumerosPares() {
    println("Usando for:")
    for (i in 1..10) {
        if (i % 2 == 0) { 
            println(i)
        }
    }
    
    println("Usando while:")
    var j = 1
    while (j <= 10) {
        if (j % 2 == 0) { 
            println(j)
        }
        j++
    }
    
    println("\nUsando do-while:")
    var k = 1
    do {
        if (k % 2 == 0) { 
            println(k)
        }
        k++
    } while (k <= 10)
}

fun factorial(n: Int): Int {
    return if (n <= 1) 1 else n * factorial(n - 1)
}

fun saludar(nombre: String, edad: Int = 0) {
    println("Hola $nombre, tienes $edad años")
}

fun elevarExponente() {
    val base2: Int = 2
    val exponente2: Int = 2

    val resultado = Math.pow(base2.toDouble(), exponente2.toDouble())
    println("La potencia es: $resultado")
}

fun demostrarAlcanceVariables() {
    // Variable local en el ámbito de la función
    val variableGlobal = "Soy global en esta función"
    
    // Bloque if con su propio ámbito
    if (true) {
        val variableIf = "Soy local del if"
        println("Dentro del if: $variableIf")
        println("Puedo acceder a: $variableGlobal")
    }
    
    // Bloque for con su propio ámbito
    for (i in 1..3) {
        val variableFor = "Soy local del for - iteración $i"
        println("Dentro del for: $variableFor")
        println("Puedo acceder a: $variableGlobal")
    }
    
    // Intentar acceder a variables locales fuera de su ámbito
    // println(variableIf)  // Esto daría error
    // println(variableFor) // Esto daría error
}

fun calcularPromedio(numeros: List<Int>): Double {
    var suma = 0  // Variable local mutable
    var contador = 0  // Variable local mutable
    
    for (numero in numeros) {
        suma += numero
        contador++
    }
    
    return if (contador > 0) suma.toDouble() / contador else 0.0
}

fun mostrarElMasGrandeYElMasChiquito(lista: List<Int>) {

    var chiquito = lista[0]
    var grande = lista[0]

    for (num in lista) {
        if (num < chiquito) chiquito = num
        if (num > grande) grande = num
    }

    println(" El más chiquito es: $chiquito")
    println("El más grande es: $grande")
}

fun main() {
    val misNumeros = listOf(5, 20, -3, 7, 11)
    mostrarElMasGrandeYElMasChiquito(misNumeros)
}